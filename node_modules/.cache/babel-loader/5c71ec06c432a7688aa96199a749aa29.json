{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/testreact/onitir-product/onitir-product/src/helper/bloghelper.js\";\nimport React from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport blogpost from \"../data/blog.json\";\nimport blogcategory from '../data/blogcategory.json';\nimport blogtags from '../data/blogtags.json';\nimport author from '../data/team.json'; // Get Category\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getCategories(items) {\n  var elems = blogcategory.filter(item => {\n    return items.includes(item.id);\n  });\n  return elems;\n} // Tags\n\n\nfunction getTags(items) {\n  var elems = blogtags.filter(item => {\n    return items.includes(item.id);\n  });\n  return elems;\n} // Client\n\n\nfunction getAuthor(items) {\n  var elems = author.filter(item => {\n    return items.includes(item.id);\n  });\n  return elems;\n}\n\nfunction setCategoriesCount() {\n  for (let i = 0; i < blogcategory.length; i++) {\n    var count = blogpost.filter(post => {\n      return post.categories.includes(parseInt(blogcategory[i].id));\n    });\n    count = count.length;\n    blogcategory[i].count = count;\n  }\n}\n\nsetCategoriesCount(); // Post details\n\nfunction getBlog(id) {\n  return blogpost.filter(blog => {\n    return blog.id === parseInt(id);\n  })[0];\n} // Pagination\n\n\nfunction postnavigation(items, index) {\n  var output = [],\n      id,\n      item;\n\n  if (items[index - 1] !== undefined && index - 1 !== -1) {\n    item = items[index - 1];\n    id = item.id; // Show the previous button \n\n    output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prev-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Prev Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/blog-details/\" + parseInt(id),\n        children: [item.title.slice(0, 20), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 35\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this));\n  }\n\n  if (items[index + 1] !== undefined && index <= items.length - 1) {\n    // Show next button \n    item = items[index + 1];\n    id = item.id;\n    output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Next Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/blog-details/\" + parseInt(id),\n        children: item.title.slice(0, 20)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 35\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this));\n  }\n\n  return output;\n} // Filter\n\n\nfunction getFilteredPosts(posts, filter = {\n  cat: '',\n  tag: '',\n  author: '',\n  searchQuery: ''\n}) {\n  var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\n  var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\n  var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\n  var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== ''; // Category filter\n\n  if (catgoryFilter) {\n    posts = posts.filter(post => {\n      return post.categories !== undefined && post.categories !== null && post.categories.includes(parseInt(filter.cat));\n    });\n  } // Tag filter\n\n\n  if (tagFilter) {\n    posts = posts.filter(post => {\n      return post.tags !== undefined && post.tags !== null && post.tags.includes(parseInt(filter.tag));\n    });\n  } // Author filter\n\n\n  if (authorFilter) {\n    posts = posts.filter(post => {\n      return post.author !== undefined && post.author !== null && post.author.includes(parseInt(filter.author));\n    });\n  }\n\n  if (searchFilter) {\n    posts = posts.filter(post => {\n      return post.title !== undefined && post.title !== null && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase());\n    });\n  }\n\n  return posts;\n}\n\nexport { getBlog, getCategories, getTags, getAuthor, getFilteredPosts, postnavigation };","map":{"version":3,"sources":["/opt/lampp/htdocs/testreact/onitir-product/onitir-product/src/helper/bloghelper.js"],"names":["React","Link","blogpost","blogcategory","blogtags","author","getCategories","items","elems","filter","item","includes","id","getTags","getAuthor","setCategoriesCount","i","length","count","post","categories","parseInt","getBlog","blog","postnavigation","index","output","undefined","push","title","slice","getFilteredPosts","posts","cat","tag","searchQuery","catgoryFilter","tagFilter","authorFilter","searchFilter","tags","toLowerCase"],"mappings":"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","sourcesContent":["import React from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport blogpost from \"../data/blog.json\";\r\nimport blogcategory from '../data/blogcategory.json';\r\nimport blogtags from '../data/blogtags.json';\r\nimport author from '../data/team.json';\r\n// Get Category\r\nfunction getCategories(items) {\r\n    var elems = blogcategory.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Tags\r\nfunction getTags(items) {\r\n    var elems = blogtags.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n\r\n// Client\r\nfunction getAuthor(items) {\r\n    var elems = author.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = blogpost.filter(post => { return post.categories.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Post details\r\nfunction getBlog(id) {\r\n    return blogpost.filter(blog => { return blog.id === parseInt(id) })[0];\r\n}\r\n// Pagination\r\nfunction postnavigation(items, index) {\r\n    var output = [],\r\n        id, item;\r\n    if (items[index - 1] !== undefined && index - 1 !== -1) {\r\n        item = items[index - 1];\r\n        id = item.id;\r\n        // Show the previous button \r\n        output.push(<div key={id} className=\"prev-post\">\r\n            <span>Prev Post</span><Link to={\"/blog-details/\" + parseInt(id)}>{item.title.slice(0, 20)} </Link></div>);\r\n    }\r\n    if (items[index + 1] !== undefined && index <= items.length - 1) {\r\n        // Show next button \r\n        item = items[index + 1];\r\n        id = item.id;\r\n        output.push(<div key={id} className=\"next-post\">\r\n            <span>Next Post</span><Link to={\"/blog-details/\" + parseInt(id)}>{item.title.slice(0, 20)}</Link></div>);\r\n    }\r\n\r\n    return output;\r\n}\r\n// Filter\r\nfunction getFilteredPosts(posts, filter = { cat: '', tag: '', author: '', searchQuery: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.categories !== undefined && post.categories !== null) && post.categories.includes(parseInt(filter.cat))\r\n        })\r\n    }\r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n    if (searchFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.title !== undefined && post.title !== null) && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase())\r\n        })\r\n    }\r\n    return posts;\r\n}\r\nexport { getBlog, getCategories, getTags, getAuthor, getFilteredPosts, postnavigation };"]},"metadata":{},"sourceType":"module"}