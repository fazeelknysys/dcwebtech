{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/testreact/onitir-product/dcwebtech/src/helper/contactform.js\";\nimport React, { Component, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Contactform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      phone: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n  }\n\n  onNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  onPhoneChange(event) {\n    this.setState({\n      phone: event.target.value\n    });\n  }\n\n  onEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  onSubjectChange(event) {\n    this.setState({\n      subject: event.target.value\n    });\n  }\n\n  onMessageChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch('https://www.metropolitanhost.com/scripts/sendmail.php', {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.id !== '') {\n        alert(\"Message Sent.\");\n        this.resetForm();\n      } else {\n        alert(\"Message failed to send.\");\n      }\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Contactform;","map":{"version":3,"sources":["/opt/lampp/htdocs/testreact/onitir-product/dcwebtech/src/helper/contactform.js"],"names":["React","Component","Fragment","Contactform","constructor","props","state","name","phone","email","subject","message","onNameChange","event","setState","target","value","onPhoneChange","onEmailChange","onSubjectChange","onMessageChange","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","response","json","id","alert","resetForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AACDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd;AACH;;AACDC,EAAAA,aAAa,CAACJ,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAtB,KAAd;AACH;;AACDE,EAAAA,aAAa,CAACL,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAtB,KAAd;AACH;;AACDG,EAAAA,eAAe,CAACN,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACH;;AACDI,EAAAA,eAAe,CAACP,KAAD,EAAQ;AACnB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACH;;AACDK,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,uDAAD,EAA0D;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAApB,CAFqD;AAG3DuB,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAHkD,KAA1D,CAAL,CAOGC,IAPH,CAQKC,QAAD,IAAeA,QAAQ,CAACC,IAAT,EARnB,EASEF,IATF,CASQC,QAAD,IAAc;AACjB,UAAIA,QAAQ,CAACE,EAAT,KAAgB,EAApB,EAAwB;AACpBC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACA,aAAKC,SAAL;AACH,OAHD,MAGO;AACHD,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,KAhBD;AAiBH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAKrB,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,KAAK,EAAE,EAA9B;AAAkCC,MAAAA,OAAO,EAAE,EAA3C;AAA+CC,MAAAA,OAAO,EAAE;AAAxD,KAAd;AACH;;AACDyB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AArD+B;;AAwDpC,eAAejC,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nclass Contactform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            subject: '',\r\n            message: ''\r\n        }\r\n    } \r\n    onNameChange(event) {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    onPhoneChange(event) {\r\n        this.setState({ phone: event.target.value })\r\n    }\r\n    onEmailChange(event) {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    onSubjectChange(event) {\r\n        this.setState({ subject: event.target.value })\r\n    }\r\n    onMessageChange(event) {\r\n        this.setState({ message: event.target.value })\r\n    }  \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        fetch('https://www.metropolitanhost.com/scripts/sendmail.php', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then(\r\n            (response) => (response.json())\r\n        ).then((response) => {\r\n            if (response.id !== '') {\r\n                alert(\"Message Sent.\");\r\n                this.resetForm();\r\n            } else {\r\n                alert(\"Message failed to send.\")\r\n            }\r\n        })\r\n    }\r\n    resetForm() {\r\n        this.setState({ name: \"\", phone: \"\", email: \"\", subject: \"\", message: \"\", })\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contactform;"]},"metadata":{},"sourceType":"module"}